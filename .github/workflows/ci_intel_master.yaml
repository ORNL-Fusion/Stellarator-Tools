name: Continuous Integration Test Intel Master
on:
    workflow_dispatch:
    push:
jobs:
    ci_test:
        strategy:
            matrix:
                os: [ubuntu-latest]
                mode: [Release]
                compiler: [intel, oneapi]
        runs-on: ${{matrix.os}}
        steps:
            - name: CPU Info
              if: ${{matrix.os == 'ubuntu-latest'}}
              run: awk '{if ($0=="") exit; print $0}' /proc/cpuinfo
            - name: Clone Repo
              shell: bash
              working-directory: ${{runner.workspace}}
              run: git clone https://github.com/ORNL-Fusion/Stellarator-Tools.git ${{runner.workspace}}/Stellarator-Tools
            - name: Create build directory.
              working-directory: ${{runner.workspace}}/Stellarator-Tools
              run: cmake -E make_directory build
            - name: Setup Repo
              shell: bash
              run: |
                wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
                sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
                rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
                sudo echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
                sudo apt-get update
                sudo apt-get install -y intel-oneapi-compiler-shared-2024.0
                sudo apt-get install -y intel-oneapi-compiler-shared-runtime-2024.0
                sudo apt-get install -y intel-oneapi-mpi-devel
                sudo apt-get install -y intel-oneapi-mkl-devel
            - name: Build Libraries Intel
              if: ${{matrix.compiler == 'intel'}}
              shell: bash
              run: |
                source /opt/intel/oneapi/setvars.sh
                git clone https://github.com/Unidata/netcdf-c.git
                cd netcdf-c
                mkdir build
                cd build
                cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=icc ../
                make -j
                sudo make install
                ../../
                git clone https://github.com/Unidata/netcdf-fortran.git
                cd netcdf-fortran
                mkdir build
                cd build
                cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=icc -DCMAKE_Fortran_COMPILER=ifort ../
                make -j
                sudo make install
                ../../
            - name: Build Libraries OneAPI
              if: ${{matrix.compiler == 'oneapi'}}
              shell: bash
              run: |
                source /opt/intel/oneapi/setvars.sh
                git clone https://github.com/Unidata/netcdf-c.git
                cd netcdf-c
                mkdir build
                cd build
                cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=icx ../
                make -j
                sudo make install
                ../../
                git clone https://github.com/Unidata/netcdf-fortran.git
                cd netcdf-fortran
                mkdir build
                cd build
                cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx ../
                make -j
                sudo make install
                ../../
            - name: Configure CMake Intel
              if: ${{matrix.compiler == 'intel'}}
              shell: bash
              working-directory: ${{runner.workspace}}/Stellarator-Tools/build
              run: |
                source /opt/intel/oneapi/setvars.sh
                cmake -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=iccpc -DCMAKE_Fortran_COMPILER=ifort -DBLA_VENDOR=Intel10_64_dyn -DCMAKE_BUILD_TYPE=${{matrix.mode}} -DBUILD_BOOZ_XFORM=ON -DBUILD_V3FIT=ON -DBUILD_V3RFUN=ON -DBUILD_SIESTA=ON -DBUILD_LGRID=ON -DBUILD_SURFACE=ON -DBUILD_BMW=ON -DBUILD_PARVMEC=ON -DBUILD_DESCUR=ON -DUSE_FAST_COPY=ON -DUSE_PROFILER=ON ${{runner.workspace}}/Stellarator-Tools/
            - name: Configure CMake OneAPI
              if: ${{matrix.compiler == 'oneapi'}}
              shell: bash
              working-directory: ${{runner.workspace}}/Stellarator-Tools/build
              run: |
                source /opt/intel/oneapi/setvars.sh
                cmake -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icpx -DCMAKE_Fortran_COMPILER=ifx -DBLA_VENDOR=Intel10_64_dyn -DCMAKE_BUILD_TYPE=${{matrix.mode}} -DBUILD_BOOZ_XFORM=ON -DBUILD_V3FIT=ON -DBUILD_V3RFUN=ON -DBUILD_SIESTA=ON -DBUILD_LGRID=ON -DBUILD_SURFACE=ON -DBUILD_BMW=ON -DBUILD_PARVMEC=ON -DBUILD_DESCUR=ON -DUSE_FAST_COPY=ON -DUSE_PROFILER=ON ${{runner.workspace}}/Stellarator-Tools/
            - name: Build
              shell: bash
              working-directory: ${{runner.workspace}}/Stellarator-Tools/build
              run: |
                source /opt/intel/oneapi/setvars.sh
                make -j VERBOSE=1
            - name: Test Linux
              shell: bash
              working-directory: ${{runner.workspace}}/Stellarator-Tools/build
              run: |
                source /opt/intel/oneapi/setvars.sh
                make test ARGS=-j2
            - name: Show Log
              if: failure()
              shell: bash
              working-directory: ${{runner.workspace}}/Stellarator-Tools/build/Testing/Temporary
              run: cat LastTest.log
